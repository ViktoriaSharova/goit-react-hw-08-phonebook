{"version":3,"file":"static/js/105.6641d232.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.js","redux/Contacts/Selectors.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const List = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  margin: auto;\n  width: 350px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  border: 1px solid #ccc;\n  margin-bottom: 10px;\n`;\n\nexport const ListItemBtn = styled.button`\n  border: 1px solid grey;\n  background-color: white;\n  cursor: pointer;\n  color: #fff;\n  padding: 5px 10px;\n  border: none;\n  border-radius: 5px;\n`;","\n\nimport { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts.user;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectStatusFilter = state => state.contacts.filters;\n\nexport const selectFilter = createSelector(\n  [selectContacts, selectStatusFilter],\n  (user, filters) => {\n    return user.filter(item =>\n      item.name.toLowerCase().includes(filters.toLowerCase())\n    );\n  }\n);","import { useDispatch, useSelector } from 'react-redux';\nimport { List, ListItem, ListItemBtn } from './ContactList.styled';\nimport { selectFilter } from '../../redux/Contacts/Selectors';\nimport { deleteContacts } from '../../redux/Contacts/Operations';\n\n\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const updateCont = id => {\n    dispatch(deleteContacts(id));\n  };\n  return (\n    <List>\n      {visibleContacts &&\n        visibleContacts.map(({ id, name, number }) => {\n          return (\n            <ListItem key={id}>\n              {`${name}: ${number}`}\n              <ListItemBtn\n                // variant=\"outlined\"\n                // startIcon={<DeleteIcon />}\n                onClick={() => updateCont(id)}\n              >\n                Delete\n              </ListItemBtn>\n            </ListItem>\n          );\n        })}\n    </List>\n  );\n};","import { Field, Form } from 'formik';\nimport { styled } from 'styled-components';\n\nexport const FormWrapper = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 300px;\n  margin: auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n\n    div {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormField = styled(Field)`\n  margin-top: 10px;\n  width: 200px;\n`;\n\nexport const FormBtn = styled.button`\n  display: block;\n  width: 150px;\n  border-radius: 5px;\n  background-color: lightblue;\n  cursor: pointer;\n`;","import { Formik } from 'formik';\nimport {\n    FormWrapper,\n    FormField,\n    FormLabel,\n    FormBtn,\n} from './ContactForm.styled';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from '../../redux/Contacts/Operations';\nimport { selectContacts } from '../../redux/Contacts/Selectors';\n\nconst phonebookSchema = Yup.object().shape({\n  name: Yup.string().required('Required'),\n  number: Yup.string().required('Required'),\n});\n\nexport const ContactForm = () => {\n  const dataContacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handelForm = value => {\n    if (\n      dataContacts &&\n      dataContacts.some(contact => contact.name === value.name)\n    ) {\n      alert('This contact is in your phone book');\n    } else {\n      dispatch(addContacts(value));\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={phonebookSchema}\n      onSubmit={(value, action) => {\n        handelForm(value);\n        action.resetForm();\n      }}\n    >\n      <FormWrapper>\n      <div>\n        <FormLabel>\n          Name\n          <FormField name=\"name\" />\n        </FormLabel>\n        </div>\n        <div>\n        <FormLabel>\n          Number\n          <FormField name=\"number\" />\n          </FormLabel>\n          </div>\n        <FormBtn type=\"submit\">Add contact</FormBtn>\n      </FormWrapper>\n    </Formik>\n  );\n};","import styled from 'styled-components';\n\nexport const FilterText = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n`;\n\nexport const InputFilter = styled.input`\n  padding: 5px;\n  font-size: 16px;\n  padding: 5px;\n  font-size: 16px;\n  width: 300px;\n  margin: auto;\n`;","import { useDispatch } from 'react-redux';\nimport { filters } from '../../redux/Contacts/ContactsSlice';\nimport { FilterText, InputFilter } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const updateFilter = value => {\n    dispatch(filters(value));\n  };\n  return (\n      <FilterText>Find contact by name\n      <InputFilter\n        type=\"text\"\n        name=\"search\"\n        placeholder=\"Type name\"\n        autoComplete=\"current-password\"\n        onChange={evt => updateFilter(evt.target.value)}\n      ></InputFilter>\n    </FilterText>\n  );\n};","import { useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { selectContacts, selectError, selectIsLoading } from '../redux/Contacts/Selectors';\nimport { Filter } from '../components/Filter/Filter';\n\nexport default function Contacts() {\n  const dataContacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your Contacts</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && !error && 'Loading... Please wait.'}</div>\n      <Filter />\n      {dataContacts && <ContactList />}\n    </>\n  );\n}"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","ListItemBtn","_templateObject3","selectContacts","state","contacts","user","selectIsLoading","isLoading","selectError","error","selectFilter","createSelector","filters","filter","item","name","toLowerCase","includes","ContactList","visibleContacts","useSelector","dispatch","useDispatch","_jsx","children","map","_ref","id","number","_jsxs","concat","onClick","deleteContacts","updateCont","FormWrapper","Form","FormLabel","FormField","Field","FormBtn","_templateObject4","phonebookSchema","Yup","shape","required","ContactForm","dataContacts","Formik","initialValues","validationSchema","onSubmit","value","action","some","contact","alert","addContacts","handelForm","resetForm","type","FilterText","InputFilter","Filter","placeholder","autoComplete","onChange","evt","target","Contacts","_Fragment","Helmet"],"sourceRoot":""}